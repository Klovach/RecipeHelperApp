@model RecipeHelperApp.ViewModels.NutritionFormDTO

@{
    ViewData["Title"] = "Details";
}

<div class="row d-flex flex-wrap">
    <div class="col-md-6 d-flex align-items-stretch">
        <div class="card shadow mb-4">
            <h5 class="card-header">
                Nutritional Form
            </h5>
            <div class="m-3">
                <img class="card-img-top" img src="~/theme/img/undraw_indoor_bike_pwa4.svg" style="height:300px" />
            </div>
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Health Information</h6>
            </div>
            <div class="card-body">
                <p>Here's a breakdown of your health information on file! Click recalculate to 
                    calculate your macronutrients based on your profile! 
                </p>
                <div class="row">
                    <table class="table">
                        <tbody>
                            <tr>
                                @if (Model.Sex.Equals("Male"))
                                {
                                    <td><i class="fas fa-male"></i> Sex</td>
                                }
                                else
                                {
                                    <td><i class="fas fa-female"></i> Sex</td>
                                }
                                <td>@Html.DisplayFor(model => model.Sex)</td>
                            </tr>
                            <tr>
                                <td><i class="fas fa-weight"></i> Age</td>
                                <td>@Html.DisplayFor(model => model.Age)</td>
                            </tr>
                            <tr>
                                <td><i class="fas fa-ruler-vertical"></i> Height</td>
                                @{
                                    double Centimeters = 167.64; 
                                    double Inches = Centimeters / 2.54; 
                                    double Feet = Math.Floor(Inches / 12); 
                                    Inches = Math.Floor(Inches % 12);
                                }
                                <td>@Feet' @Inches" </td>
                            </tr>
                            <tr>
                                <td><i class="fas fa-weight"></i> Weight</td>
                                <td>@Html.DisplayFor(model => model.Weight)</td>
                            </tr>
                            <tr>
                                <td><i class="fas fa-bullseye"></i> Pounds Per Week</td>
                                <td>@Html.DisplayFor(model => model.PoundsPerWeek)</td>
                            </tr>
                        
                            <tr>
                                <td><i class="fas fa-running"></i> Activity Level</td>
                                <td>@Html.DisplayFor(model => model.ActivityLevel)</td>
                            </tr>
                            <tr>
                                <td><i class="fas fa-dumbbell"></i> Fitness Goal</td>
                                <td>@Html.DisplayFor(model => model.FitnessGoal)</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h5>My Pantry</h5>
            </div>
            <div class="card-body">
                <table class="table">
                    <tbody>
                        <tr>
                            <td><i class="fas fa-apple-alt"></i> Use My Nutritional Profile In Recipe Generation</td>
                            <td>@Html.DisplayFor(model => model.IncludeNutrition)</td>
                        </tr>
                        <tr>
                            <td><i class="fas fa-utensils"></i> Specify My Servings</td>
                            <td>@Html.DisplayFor(model => model.IncludeServings)</td>                        
                        </tr>
                            @if (Model.IncludeServings)
                            {
                               <td> <i>Your Number of Servings Per Meal is @Model.Servings</i></td>
                            }
                        <tr>
                            <td><i class="fas fa-plus-circle"></i> Include My Ingredients</td>
                            <td>@Html.DisplayFor(model => model.IncludeIngredients)</td>
                        </tr>
                        <tr>
                            <td><i class="fas fa-minus-circle"></i> Exclude My Ingredients</td>
                            <td>@Html.DisplayFor(model => model.ExcludeIngredients)</td>
                        </tr>
                    </tbody>
                </table>
                <dl class="row">
                    <div class="col-sm-6">
                        <dt>Included Ingredients List:</dt>
                        <dd>@Html.DisplayFor(model => model.IncludedIngredients)</dd>
                    </div>
                    <div class="col-sm-6">
                        <dt>Excluded Ingredients List:</dt>
                        <dd>@Html.DisplayFor(model => model.ExcludedIngredients)</dd>
                    </div>
                </dl>
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h4>Macronutrient Ratios</h4>
            </div>
            <div class="card-body">
                <div class="chart-pie pt-4 pb-2">
                    <canvas id="macroChart"></canvas>
                </div>
                <dl class="row m-3">
                   
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Daily Calories</th>
                                <th><i class="fas fa-circle text-success"></i> Carbohydrates</th>
                                <th><i class="fas fa-circle text-danger"></i> Protein</th>
                                <th><i class="fas fa-circle text-warning"></i> Fat</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@Html.DisplayFor(model => model.Nutrients.Calories)</td>
                                <td>@Html.DisplayFor(model => model.Nutrients.Carbohydrates)</td>
                                <td>@Html.DisplayFor(model => model.Nutrients.Protein)</td>
                                <td>@Html.DisplayFor(model => model.Nutrients.Fat)</td>
                            </tr>
                        </tbody>
                    </table>

                </dl>
            </div>
        </div>
    </div>
</div>

<a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-success">
    <i class="fas fa-edit"></i> Edit
</a>

<a asp-action="Restart" asp-route-id="@Model?.Id" class="btn btn-danger">
    <i class="fas fa-sync-alt"></i> Reset
</a>

<a asp-action="Recalculate" asp-route-id="@Model?.Id" class="btn btn-info">
    <i class="fas fa-calculator"></i> Recalculate
</a>


  <!-- Page level plugins -->
    <script src="~/Theme/vendor/chart.js/Chart.min.js"></script>

    <!-- Page level custom scripts -->
    <script src="~/Theme/js/demo/chart-area-demo.js"></script>
    <script src="~/Theme/js/demo/chart-pie-demo.js"></script>

    <script src="~/js/site.js" asp-append-version="true"></script>

<script>
    
// Pie Chart Example
var ctx = document.getElementById("macroChart");
var myPieChart = new Chart(ctx, {
  type: 'doughnut',
  data: {
    labels: ["Carbs", "Protein", "Fat"],
    datasets: [{
      data: [@Model.Nutrients.Carbohydrates, @Model.Nutrients.Protein, @Model.Nutrients.Fat],
                backgroundColor: ['#1cc88a', '#e74a3b', '#E4A11B'],
                hoverBackgroundColor: ['#1cc88a', '#e74a3b', '#E4A11B'],
      hoverBorderColor: "rgba(234, 236, 244, 1)",
    }],
  },
  options: {
    maintainAspectRatio: false,
    tooltips: {
      backgroundColor: "rgb(255,255,255)",
      bodyFontColor: "#858796",
      borderColor: '#dddfeb',
      borderWidth: 1,
      xPadding: 15,
      yPadding: 15,
      displayColors: false,
      caretPadding: 10,
    },
    legend: {
      display: false
    },
    cutoutPercentage: 80,
  },
});
</script>