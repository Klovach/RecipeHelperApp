@using System.Security.Claims
@model RecipeHelperApp.ViewModels.WeekDTO

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Week</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="hidden" name="UserId" value="@User.FindFirst(ClaimTypes.NameIdentifier)?.Value" />
            </div>
            <div class="form-group">
                <label asp-for="WeekName" class="control-label"></label>
                <input asp-for="WeekName" class="form-control" />
                <span asp-validation-for="WeekName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            
         
                @foreach (var error in ViewData.ModelState.Values.SelectMany(x => x.Errors))
                {
                <div class="alert alert-danger" role="alert">

                    <span>@error.ErrorMessage</span>

                    <br />
                </div>
                }
         
            
            <div class="form-group" id="submit-button-group">
            <input type="submit" value="Generate" class="btn btn-success" />
            </div>

            <partial name="_LoadingButtonPartial" message="Generating your recipe, please stand by..." />
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
