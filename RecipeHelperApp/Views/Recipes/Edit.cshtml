@model RecipeHelperApp.ViewModels.RecipeDTO 

@{
    ViewData["Title"] = "Edit";
}


<h1>Edit</h1>

<h4>Recipe</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="DayId" />
            <span asp-validation-for="DayId" class="text-danger"></span>


            <div class="form-group">
            <img id="image-preview" src="@Model.Image" alt="Current Image" style="max-width: 500px; max-height: 500px;" />
            </div>

            <div class="form-group">
                <label for="new-image-input">Choose Image:</label>
                <div class="custom-file">
                    <input type="file" class="custom-file-input" id="new-image-input" asp-for="ImageFile" onchange="previewImage(event)">
                    <label class="custom-file-label" for="new-image-input">Choose file...</label>
                </div>
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>

            <div class="form-group">
            <div class="btn-group" role="group" aria-label="Image actions">
                <button type="button" class="btn btn-primary" onclick="resetImage()">Reset Image</button>
                <button type="button" class="btn btn-danger" onclick="deleteImage()">Delete Image</button>
            </div>

            </div>


            <div class="form-group">
                <label asp-for="MealType" class="control-label"></label>
                <input asp-for="MealType" class="form-control" />
                <span asp-validation-for="MealType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Instructions" class="control-label"></label>
                <input asp-for="Instructions" class="form-control" />
                <span asp-validation-for="Instructions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ingredients" class="control-label"></label>
                <input asp-for="Ingredients" class="form-control" />
                <span asp-validation-for="Ingredients" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Calories" class="control-label"></label>
                <input asp-for="Calories" class="form-control" />
                <span asp-validation-for="Calories" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Protein" class="control-label"></label>
                <input asp-for="Protein" class="form-control" />
                <span asp-validation-for="Protein" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Fat" class="control-label"></label>
                <input asp-for="Fat" class="form-control" />
                <span asp-validation-for="Fat" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Carbs" class="control-label"></label>
                <input asp-for="Carbs" class="form-control" />
                <span asp-validation-for="Carbs" class="text-danger"></span>
            </div>


            <div class="form-group" id="submit-button-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>

            <partial name="_LoadingButtonPartial" message="Saving your changes, please stand by..." />

        </form>

    </div>
</div>

<div>
    <a href="@Url.Action("Index", "Recipes", new { dayId = Model.DayId })">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function previewImage(event) {
            // This line retrieves the element that triggered the event, which in this case is the file input
            // element that the user interacts with to select an image file.
            var input = event.target;
            // Here, input.files[0] refers to the first file selected through the file input element (input).
            // The .name property retrieves the name of the selected file.
            var fileName = input.files[0].name;
            // This line creates a new instance of the FileReader object. FileReader is a built-in JavaScript 
            // object that allows reading the content of files asynchronously. It's commonly used to read the 
            // content of files selected via file input elements
            var reader = new FileReader();
            reader.onload = function () {
                var img = document.getElementById('image-preview');
                img.src = reader.result;
                img.style.display = 'block';
                // Update the label with the selected file name
                document.querySelector('.custom-file-label').textContent = fileName;
            };
            // 
            reader.readAsDataURL(input.files[0]);
        }

        function resetImage() { 
            var img = document.getElementById('image-preview');
            img.src = @Model.Image;
            img.style.display = 'block';

            // Show the current image.
            document.getElementById('current-image').style.display = 'block';
            // Update the label with the file name
            document.querySelector('.custom-file-label').textContent = fileName;
        }

        function deleteImage() {
            var img = document.getElementById('image-preview');
            img.src = '';
            img.style.display = 'none';
            // Hide the current image
            document.getElementById('current-image').style.display = 'none';
            // Update the label with the file name
            document.querySelector('.custom-file-label').textContent = fileName;
        }
    </script>
}


